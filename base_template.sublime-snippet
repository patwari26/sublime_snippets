<snippet>
	<content><![CDATA[
//You are the SEMICOLON to My STATEMENTS;
/* 
 ____       _                      _ ____   __   
|  _ \ __ _| |___      ____ _ _ __(_)___ \ / /_  
| |_) / _` | __\ \ /\ / / _` | '__| | __) | '_ \ 
|  __/ (_| | |_ \ V  V / (_| | |  | |/ __/| (_) |
|_|   \__,_|\__| \_/\_/ \__,_|_|  |_|_____|\___/ 

*/
#include<bits/stdc++.h>

#define ll          long long
#define pb          push_back
#define ppb         pop_back
#define    endl        '\n'
#define mii         map<ll int,ll int>
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
#define INF         (1ll<<60)
#define rep(i,a,b)  for(i=a;i<=b;i++)
#define rrep(i,a,b)  for(i=a;i>=b;i--)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define what_is(x)  cerr << #x << " is " << x << endl;
#define ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define N 100005
using namespace std;
ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
void solve(){

}
int main()
{
    ios
    int TESTS=1;
   // cin>>TESTS;
    while(TESTS--){
        solve();
    }
    return 0;
}]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>cp</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
