<snippet>
	<content><![CDATA[
template <class It, class P>
bool inside_Polygon(It begin, It end, const P& p, bool strict = true){
	// (begin,end) should be in order
    int n=0;
    // number of intersections with line from p to (inf,p.y)
    for(It i=begin,j=end-1;i!=end;j=i++){
        // if p is on edge of polygon
        if(onSegment(*i,*j,p)) return !strict;
        n+=(max(i->y,j->y)>p.y && min(i->y,j->y)<=p.y && ((*j-*i).cross(p-*i)>0)==(i->y<=p.y));
    }
    return n&1; // inside if odd number of intersections
}
// Usage:
// typedef Point<int> pi; vector<pi> v;
// v.push_back(pi(4,4)), v.push_back(pi(1,2)), v.push_back(pi(2,1));
// bool in = inside_Polygon(v.begin(),v.end(), pi(3,4), false);
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>inside_polygon</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
